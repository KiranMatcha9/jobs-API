openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://jobs-api-project-01.herokuapp.com/api/v1
  variables: {}
paths:
  /jobs:
    get:
      tags:
      - Jobs
      summary: getAlljobs
      operationId: getAlljobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
            example:
              company: Amazon
              position: FS Developer
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    delete:
      tags:
      - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}

    get:
      tags:
      - Jobs
      summary: get job
      operationId: getjob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}
 
    patch:
      tags:
      - Jobs
      summary: update job
      operationId: updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updatejobrequest'
            example:
              company: Facebook
              position: FE Developer
              status: interview
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
      - bearer: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginrequest'
            example:
              email: junior@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}
  /auth/register:
    post:
      tags:
      - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerrequest'
            example:
              name: heroku
              email: heroku@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
      - url: https://jobs-api-project-01.herokuapp.com/api/v1
        variables: {}
components:
  schemas:
    updatejobrequest:
      title: updatejobrequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Facebook
        position: FE Developer
        status: interview
    loginrequest:
      title: loginrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: junior@gmail.com
        password: secret
    registerrequest:
      title: registerrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: heroku
        email: heroku@gmail.com
        password: secret
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        status:
          type: string
      example:
        company: Amazon
        position: FS Developer
        status: interview
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
- name: Misc
  description: ''
- name: Jobs
  description: ''
- name: Auth
  description: ''